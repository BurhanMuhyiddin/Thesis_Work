;; Auto-generated. Do not edit!


(when (boundp 'move_rt::ExecutingTrajectoryGoal)
  (if (not (find-package "MOVE_RT"))
    (make-package "MOVE_RT"))
  (shadow 'ExecutingTrajectoryGoal (find-package "MOVE_RT")))
(unless (find-package "MOVE_RT::EXECUTINGTRAJECTORYGOAL")
  (make-package "MOVE_RT::EXECUTINGTRAJECTORYGOAL"))

(in-package "ROS")
;;//! \htmlinclude ExecutingTrajectoryGoal.msg.html


(defclass move_rt::ExecutingTrajectoryGoal
  :super ros::object
  :slots (_trajectory_name _ee_error_th ))

(defmethod move_rt::ExecutingTrajectoryGoal
  (:init
   (&key
    ((:trajectory_name __trajectory_name) "")
    ((:ee_error_th __ee_error_th) 0.0)
    )
   (send-super :init)
   (setq _trajectory_name (string __trajectory_name))
   (setq _ee_error_th (float __ee_error_th))
   self)
  (:trajectory_name
   (&optional __trajectory_name)
   (if __trajectory_name (setq _trajectory_name __trajectory_name)) _trajectory_name)
  (:ee_error_th
   (&optional __ee_error_th)
   (if __ee_error_th (setq _ee_error_th __ee_error_th)) _ee_error_th)
  (:serialization-length
   ()
   (+
    ;; string _trajectory_name
    4 (length _trajectory_name)
    ;; float64 _ee_error_th
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _trajectory_name
       (write-long (length _trajectory_name) s) (princ _trajectory_name s)
     ;; float64 _ee_error_th
       (sys::poke _ee_error_th (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _trajectory_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _trajectory_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float64 _ee_error_th
     (setq _ee_error_th (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get move_rt::ExecutingTrajectoryGoal :md5sum-) "d8f8c747702d98a2b465764ab182b654")
(setf (get move_rt::ExecutingTrajectoryGoal :datatype-) "move_rt/ExecutingTrajectoryGoal")
(setf (get move_rt::ExecutingTrajectoryGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
string trajectory_name
float64 ee_error_th  # Specify error threshold

")



(provide :move_rt/ExecutingTrajectoryGoal "d8f8c747702d98a2b465764ab182b654")


