// Auto-generated. Do not edit!

// (in-package baxter_msgs_mine.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class GoToJointPosGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.desired_pose = null;
      this.limb = null;
    }
    else {
      if (initObj.hasOwnProperty('desired_pose')) {
        this.desired_pose = initObj.desired_pose
      }
      else {
        this.desired_pose = [];
      }
      if (initObj.hasOwnProperty('limb')) {
        this.limb = initObj.limb
      }
      else {
        this.limb = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type GoToJointPosGoal
    // Serialize message field [desired_pose]
    bufferOffset = _arraySerializer.float32(obj.desired_pose, buffer, bufferOffset, null);
    // Serialize message field [limb]
    bufferOffset = _serializer.string(obj.limb, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type GoToJointPosGoal
    let len;
    let data = new GoToJointPosGoal(null);
    // Deserialize message field [desired_pose]
    data.desired_pose = _arrayDeserializer.float32(buffer, bufferOffset, null)
    // Deserialize message field [limb]
    data.limb = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 4 * object.desired_pose.length;
    length += object.limb.length;
    return length + 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'baxter_msgs_mine/GoToJointPosGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'b4a71d5db17a0134d8420bee776225cd';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #goal
    float32[] desired_pose
    string limb
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new GoToJointPosGoal(null);
    if (msg.desired_pose !== undefined) {
      resolved.desired_pose = msg.desired_pose;
    }
    else {
      resolved.desired_pose = []
    }

    if (msg.limb !== undefined) {
      resolved.limb = msg.limb;
    }
    else {
      resolved.limb = ''
    }

    return resolved;
    }
};

module.exports = GoToJointPosGoal;
